name: build-dockerfile
description: Cache aware building and publishing of Dockerfiles.

inputs:
  build-args:
    description: Newline separated build arguments, e.g. "VERSION=foo\nAUTHOR=bar".
  build-secrets:
    description: Newline separated build secrets, e.g. "VERSION=foo\nAUTHOR=bar".
  build-target:
    description: Target stage to build
  cache-branches:
    description: JSON array of branches which trigger publishing layers to gha cache. Use long lived branches. E.g. '["main", "master"]'. If empty, uses the default branch.
    default: '["${{ github.event.repository.default_branch }}"]'
  context:
    description: Docker build context directory. Defaults to "Git context" so you don't need to use actions/checkout, but it will not pickup local changes. Point to a directory to pickup local changes from a checkout, e.g. '.' or './alt/docker/build/path'.
    default: "{{defaultContext}}:."
  dockerfile-path:
    description: Dockerfile path (relative to build context).
    default: Dockerfile
  image-labels:
    description: Newline list of Image Labels (in name=value format)
  images:
    description: Newline list of images (in registry/image-name:tag format)
  platforms:
    description: target platforms to build image(s) for, e.g. 'linux/amd64,linux/arm64'.
    default: linux/amd64
  push:
    description: The string 'true' to push the built image to registry, otherwise the string 'false'.
    default: 'true'
  skip-summary:
    description: The string 'true' to skip writing the job summary, otherwise the string 'false'.
    default: 'false'
 
outputs:
  image-digest:
    description: Image Digest
    value: ${{ steps.docker-build-push.outputs.digest }}

runs:
  using: "composite"
  steps:

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
    with:
      driver-opts: network=host

  - id: cache # adds a unique cache scope for workflows building multiple images
    run: |
      echo "cache-refs: ${{ inputs.cache-refs }}"
      echo "scope=${{ inputs.context }}/${{ inputs.dockerfile-path }}" >> $GITHUB_OUTPUT
    shell: bash

  - id: docker-build-push
    name: Build and Publish Image
    env:
      DOCKER_BUILD_SUMMARY: ${{ ! inputs.skip-summary == 'true' }}
    uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # 6.10.0
    with:
      build-args: ${{ inputs.build-args }}
      cache-from: type=gha,scope=${{ steps.cache.outputs.scope }}
      cache-to: ${{ contains(fromJSON(inputs.cache-branches), github.ref_name) && format('type=gha,mode=max,scope={0}', steps.cache.outputs.scope) || '' }}
      context: "${{ inputs.context }}"
      file: ${{ inputs.dockerfile-path }}
      labels: ${{ inputs.image-labels }}
      #load: true # https://github.com/docker/roadmap/issues/371
      platforms: ${{ inputs.platforms }}
      push: ${{ inputs.push }}
      secrets: |-
        ${{ inputs.build-secrets }}
      tags: ${{ inputs.images }}
      target: ${{ inputs.build-target }}

  - run: |
      echo "BUILD_DOCKERFILE_IMAGE_DIGEST=${{ steps.docker-build-push.outputs.digest }}" >> $GITHUB_ENV
    shell: bash